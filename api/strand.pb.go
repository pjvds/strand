// Code generated by protoc-gen-go.
// source: strand.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	strand.proto

It has these top-level messages:
	PingRequest
	PingResponse
	WriteRequest
	ReadRequest
	WriteResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingResponse struct {
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type WriteRequest struct {
	Stream   string `protobuf:"bytes,1,opt,name=stream" json:"stream,omitempty"`
	Messages []byte `protobuf:"bytes,2,opt,name=messages,proto3" json:"messages,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadRequest struct {
	Stream string `protobuf:"bytes,1,opt,name=stream" json:"stream,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type WriteResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*PingRequest)(nil), "api.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "api.PingResponse")
	proto.RegisterType((*WriteRequest)(nil), "api.WriteRequest")
	proto.RegisterType((*ReadRequest)(nil), "api.ReadRequest")
	proto.RegisterType((*WriteResponse)(nil), "api.WriteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Strand service

type StrandClient interface {
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type strandClient struct {
	cc *grpc.ClientConn
}

func NewStrandClient(cc *grpc.ClientConn) StrandClient {
	return &strandClient{cc}
}

func (c *strandClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := grpc.Invoke(ctx, "/api.Strand/Write", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strandClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/api.Strand/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Strand service

type StrandServer interface {
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

func RegisterStrandServer(s *grpc.Server, srv StrandServer) {
	s.RegisterService(&_Strand_serviceDesc, srv)
}

func _Strand_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrandServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Strand/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrandServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strand_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrandServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Strand/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrandServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Strand_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Strand",
	HandlerType: (*StrandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _Strand_Write_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Strand_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("strand.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0x41, 0x6b, 0x84, 0x30,
	0x10, 0x85, 0xd1, 0x5a, 0xb1, 0x63, 0x14, 0x9d, 0x93, 0xd8, 0x4b, 0xc9, 0xa9, 0x50, 0x1a, 0x4a,
	0xfb, 0x47, 0x8a, 0x3d, 0xf4, 0x9c, 0xc5, 0x51, 0x64, 0xd1, 0xb8, 0x4e, 0xf6, 0xff, 0x6f, 0x36,
	0x7a, 0xc8, 0x65, 0x8f, 0xf3, 0xe6, 0xcb, 0xbc, 0xf7, 0x02, 0x82, 0xed, 0xa6, 0x97, 0x5e, 0xad,
	0x9b, 0xb1, 0x06, 0x9f, 0xf4, 0x3a, 0xc9, 0x02, 0xf2, 0xdf, 0x69, 0x19, 0x3b, 0xba, 0x5c, 0x89,
	0xad, 0x2c, 0x41, 0xec, 0x23, 0xaf, 0x66, 0x61, 0x92, 0x5f, 0x20, 0xfe, 0xb7, 0xc9, 0xd2, 0xb1,
	0xc7, 0x12, 0x52, 0x77, 0x83, 0xf4, 0xdc, 0x44, 0x6f, 0xd1, 0xfb, 0x0b, 0x56, 0x90, 0xcd, 0xc4,
	0xac, 0x47, 0xe2, 0x26, 0x76, 0x8a, 0x90, 0x9f, 0x90, 0x77, 0xa4, 0xfb, 0x47, 0x0f, 0xdc, 0x6c,
	0x86, 0x81, 0xc9, 0x7a, 0x3c, 0x91, 0xaf, 0x50, 0x1c, 0x06, 0xbb, 0x23, 0x02, 0xc4, 0xe6, 0xec,
	0xe1, 0xec, 0x9b, 0x20, 0xfd, 0xf3, 0x89, 0x51, 0xc1, 0xb3, 0xc7, 0xb0, 0x56, 0x2e, 0xb5, 0x0a,
	0x33, 0xb5, 0x18, 0x4a, 0xc7, 0x95, 0x0f, 0x48, 0xee, 0x3d, 0xb0, 0xf2, 0xbb, 0xa0, 0x61, 0x5b,
	0x07, 0xca, 0x0e, 0x9f, 0x52, 0xff, 0x1f, 0x3f, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0x85,
	0x21, 0x7d, 0x1f, 0x01, 0x00, 0x00,
}
